diff --git a/Assign1/changes.log b/Assign1/changes.log
deleted file mode 100644
index 71dfb67..0000000
--- a/Assign1/changes.log
+++ /dev/null
@@ -1,9 +0,0 @@
-diff --git a/Assign1/error.log b/Assign1/error.log
-index 9f6bc78..df8d632 100644
---- a/Assign1/error.log
-+++ b/Assign1/error.log
-@@ -1,4 +1,3 @@
--[1 of 1] Compiling Main             ( hs1.hs, nothing )
- [1 of 1] Compiling Main             ( Assign1/hsErrTest.hs, nothing )
- 
- Assign1/hsErrTest.hs:3:19:
diff --git a/Assign1/error.log b/Assign1/error.log
deleted file mode 100644
index df8d632..0000000
--- a/Assign1/error.log
+++ /dev/null
@@ -1,9 +0,0 @@
-[1 of 1] Compiling Main             ( Assign1/hsErrTest.hs, nothing )
-
-Assign1/hsErrTest.hs:3:19:
-    Couldn't match type ‘[Char]’ with ‘Integer’
-    Expected type: Integer
-      Actual type: String
-    In the second argument of ‘(-)’, namely ‘b’
-    In the expression: a - b
-[1 of 1] Compiling Main             ( Assign1/hsTest.hs, nothing )
diff --git a/Assign1/todo.log b/Assign1/todo.log
deleted file mode 100644
index 70be484..0000000
--- a/Assign1/todo.log
+++ /dev/null
@@ -1 +0,0 @@
-Assign1/ProjectAnalyze.sh:grep -r --exclude="todo.log" --exclude="changes.log"  "#TODO" Assign1 > Assign1/todo.log
diff --git a/ProjectAnalyze.sh b/ProjectAnalyze.sh
index 8e951a1..ac9589c 100644
--- a/ProjectAnalyze.sh
+++ b/ProjectAnalyze.sh
@@ -17,13 +17,13 @@ else
 fi
 
 # Puts all uncommitted changes in a file
-git diff -- . ":(exclude)Assign1/changes.log" > Assign1/changes.log
+git diff -- . ":(exclude)changes.log" > changes.log
 
 # Puts each line from every file in project with the tag TODO into a file
-grep -r --exclude="todo.log" --exclude="changes.log"  "#TODO" Assign1 > Assign1/todo.log
+grep -r --exclude="*.log" --exclude="ProjectAnalyze.sh"  "#TODO" . > todo.log
  
 # Checks all haskell files for syntax errors and puts the results into a file
-rm Assign1/error.log
+rm error.log
 find . -name "*.hs" |
     while read file
     do
@@ -31,12 +31,12 @@ find . -name "*.hs" |
       if grep -q "The IO action" "tmpErr.txt"
       then
          sed -i "1i main = undefined --tmp" "$file"
-	 ghc -fno-code "$file" &>> Assign1/error.log
+	 ghc -fno-code "$file" &>> error.log
       else
-         ghc -fno-code "$file" &>> Assign1/error.log
+         ghc -fno-code "$file" &>> error.log
       fi
-     # sed -i "/main = undefined --tmp/d" $file
     done
+
 find . -name "*.hs" |
     while read fileFix
     do
@@ -45,13 +45,13 @@ find . -name "*.hs" |
 rm tmpErr.txt
 
 # Checks if any changes have been made to local repo. If yes, it gives user the option to commit and push those changes to gihub
-if [ -s "Assign1/changes.log" ]
+if [ -s "changes.log" ]
 then
     echo "Unstaged changes within your local repo have been detected."
     read -p "Would you like to view these changes? (Y/n) " ans1
     if [ "$ans1" = "Y" ]
     then
-        cat "Assign1/changes.log"
+        cat "changes.log"
     fi
     read -p "Would you like to stage and commit all of these changes? (Y/n) " ans2
     if [ "$ans2" = "Y" ]
